<Window x:Class="Lab_2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:local="clr-namespace:Lab_2"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="1200">
    <Window.Resources>
        <local:IntStrConv x:Key="IntStrConv"/>
        <local:DoubleStrConv x:Key="DoubleStrConv"/>
    </Window.Resources>
    <Window.CommandBindings>
        <CommandBinding Command="local:CustomCommands.MeasuredData" CanExecute="MeasuredData_CanExecute" Executed="MeasuredData_Executed" />
        <CommandBinding Command="local:CustomCommands.Splines" CanExecute="Splines_CanExecute" Executed="Splines_Executed" />
    </Window.CommandBindings>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition/>
            <RowDefinition Height="64.003"/>
            <RowDefinition Height="64.003"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="184*"/>
            <ColumnDefinition Width="232*"/>
            <ColumnDefinition Width="309*"/>
            <ColumnDefinition Width="200*"/>
        </Grid.ColumnDefinitions>
        <Menu x:Name="menu" Grid.ColumnSpan="4">
            <MenuItem Header="Menu">
                <MenuItem Header="MeasuredData" Command="local:CustomCommands.MeasuredData"/>
                <MenuItem Header="Splines" Command="local:CustomCommands.Splines"/>
            </MenuItem>
            <ToolBar Height="30" VerticalAlignment="Top">
                <Button Command="local:CustomCommands.MeasuredData">MeasuredData</Button>
                <Separator />
                <Button Command="local:CustomCommands.Splines">Splines</Button>
            </ToolBar>
        </Menu>
        <ListBox x:Name="listBox" Margin="0,10,0,2" Grid.Row="1" Grid.Column="3" Grid.RowSpan="3"
                 ItemsSource="{Binding Data.SplineData.Data.DataForListBox, 
                 RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
        <Grid Grid.Row="1" Margin="0,10,0,2">
            <Grid.RowDefinitions>
                <RowDefinition Height="11*"/>
                <RowDefinition Height="97*"/>
            </Grid.RowDefinitions>
            <ComboBox x:Name="Func" HorizontalAlignment="Center" 
                      VerticalAlignment="Center" Width="120" Height="22" 
                      IsSynchronizedWithCurrentItem="True"
                      SelectedItem="{Binding Data.InputData.Function, Mode=TwoWay, 
                      RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}}"/>
            <TextBlock x:Name="textBlock_Length_NonUniform" 
                       HorizontalAlignment="Center" Margin="0,6,0,0" 
                       Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" 
                       Width="172" Height="16">
                <Run Text="Length (nonuniform grid)"/>
            </TextBlock>
            <TextBox x:Name="textBox_Length_NonUniform" 
                     HorizontalAlignment="Center" 
                     Margin="0,23,0,0" Grid.Row="1" 
                     TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="172" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputData.Length" 
                             RelativeSource="{RelativeSource FindAncestor, 
                             AncestorType={x:Type local:MainWindow}}" 
                             Converter="{StaticResource IntStrConv}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock x:Name="textBlock_Length_Uniform" 
                       HorizontalAlignment="Center" Margin="0,41,0,0" 
                       Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" 
                       Width="172" Height="18">
                <Run Text="Length (uniform grid)"/>
            </TextBlock>
            <TextBox x:Name="textBox_Length_Uniform" 
                     HorizontalAlignment="Center" Grid.Row="1" 
                     TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="172" Height="18" Margin="0,60,0,0">
                <Binding Path="Data.InputData.UniformLength" 
                         RelativeSource="{RelativeSource FindAncestor, 
                         AncestorType={x:Type local:MainWindow}}" 
                         Converter="{StaticResource IntStrConv}">
                    <Binding.ValidationRules>
                        <DataErrorValidationRule/>
                    </Binding.ValidationRules>
                </Binding>
            </TextBox>
            <TextBlock x:Name="textBlock_Interval" 
                       HorizontalAlignment="Center" 
                       Margin="0,85,0,0" Grid.Row="1" 
                       TextWrapping="Wrap" VerticalAlignment="Top" 
                       Width="172" Height="18">
                <Run Language="ru-ru" Text="Interval"/>
            </TextBlock>
            <TextBlock x:Name="textBlock_Left" 
                       Margin="-150,105,0,0" Grid.Row="1" 
                       TextWrapping="Wrap" VerticalAlignment="Top" 
                       Width="5" Height="16" FontWeight="Bold">
                <Run Language="ru-ru" Text="["/>
            </TextBlock>
            <TextBox x:Name="textBox_Left" 
                     Margin="-90,105,0,0" Grid.Row="1" 
                     TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="45">
                <TextBox.Text>
                    <Binding Path="Data.InputData.Left" 
                             RelativeSource="{RelativeSource FindAncestor, 
                             AncestorType={x:Type local:MainWindow}}" 
                             Converter="{StaticResource DoubleStrConv}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock x:Name="textBlock_comma" 
                       Margin="-30,105,0,0" Grid.Row="1" 
                       TextWrapping="Wrap" VerticalAlignment="Top" 
                       Width="5" Height="16" FontWeight="Bold">
                <Run Language="ru-ru" Text=";"/>
            </TextBlock>
            <TextBox x:Name="textBox_Right" 
                     Grid.Row="1" 
                     TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="45" Height="18" Margin="30,105,0,0">
                <TextBox.Text>
                    <Binding Path="Data.InputData.Right" 
                             RelativeSource="{RelativeSource FindAncestor, 
                             AncestorType={x:Type local:MainWindow}}" 
                             Converter="{StaticResource DoubleStrConv}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock x:Name="textBlock_Right" 
                       Margin="90,105,0,0" Grid.Row="1" 
                       TextWrapping="Wrap" VerticalAlignment="Top" 
                       Width="5" Height="16" FontWeight="Bold">
                <Run Language="ru-ru" Text="]"/>
            </TextBlock>
            <TextBlock x:Name="textBlock_der1" 
                       HorizontalAlignment="Center" TextWrapping="Wrap" 
                       VerticalAlignment="Top" Width="172" Height="32"
                       Grid.Row="1" Margin="0,125,0,0">
                <Run Language="ru-ru" Text="Second derivatives"/>
                <LineBreak/>
                <Run Language="ru-ru" Text="for first spline:"/>
            </TextBlock>
            <TextBox x:Name="textBox_der1_l" 
                     HorizontalAlignment="Center" 
                     Margin="0,160,0,0" Grid.Row="1" 
                     TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="172" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputData.Der1Left" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource DoubleStrConv}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox x:Name="textBox_der1_r" 
                     HorizontalAlignment="Center" 
                     Margin="0,180,0,0" Grid.Row="1" 
                     TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="172" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputData.Der1Right" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}}" Converter="{StaticResource DoubleStrConv}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBlock x:Name="textBlock_der2" 
                       HorizontalAlignment="Center" Margin="0,205,0,0" 
                       Grid.Row="1" TextWrapping="Wrap" 
                       VerticalAlignment="Top" Width="172" Height="32">
                <Run Text="Second derivatives"/>
                <LineBreak/>
                <Run Language="ru-ru" Text="for second spline:"/>
            </TextBlock>
            <TextBox x:Name="textBox_der2_l" 
                     HorizontalAlignment="Center" Margin="0,240,0,0" 
                     Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="172" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputData.Der2Left" 
                             RelativeSource="{RelativeSource FindAncestor, 
                             AncestorType={x:Type local:MainWindow}}" 
                             Converter="{StaticResource DoubleStrConv}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
            <TextBox x:Name="textBox_der2_r" 
                     HorizontalAlignment="Center" Margin="0,260,0,0" 
                     Grid.Row="1" TextWrapping="Wrap" VerticalAlignment="Top" 
                     Width="172" Height="18">
                <TextBox.Text>
                    <Binding Path="Data.InputData.Der2Right" 
                             RelativeSource="{RelativeSource FindAncestor, 
                             AncestorType={x:Type local:MainWindow}}" 
                             Converter="{StaticResource DoubleStrConv}">
                        <Binding.ValidationRules>
                            <DataErrorValidationRule/>
                        </Binding.ValidationRules>
                    </Binding>
                </TextBox.Text>
            </TextBox>
        </Grid>
        <lvc:CartesianChart 
            Series="{Binding Data.Graphics.Plot}" 
            LegendLocation="Right" Grid.Column="1" Grid.ColumnSpan="2"
            Margin="10,10,10,10" Grid.Row="1">
            <lvc:CartesianChart.AxisY>
                <lvc:Axis Title="Value" 
                          LabelFormatter="{Binding Data.Graphics.Formatter}"></lvc:Axis>
            </lvc:CartesianChart.AxisY>
            <lvc:CartesianChart.AxisX>
                <lvc:Axis Title="Segment" 
                          LabelFormatter="{Binding Data.Graphics.Formatter}"></lvc:Axis>
            </lvc:CartesianChart.AxisX>
        </lvc:CartesianChart>
        <TextBlock x:Name="textBlock_Der_1rst" 
                   Grid.Column="2" HorizontalAlignment="Left" 
                   Margin="10,5,0,0" Grid.Row="2" TextWrapping="Wrap" 
                   VerticalAlignment="Top" Width="452" Height="62"
                   FontWeight="Bold"/>
        <TextBlock x:Name="textBlock_Der_2nd" 
                   Grid.Column="2" HorizontalAlignment="Left" 
                   Margin="10,0,0,0" Grid.Row="3" TextWrapping="Wrap" 
                   VerticalAlignment="Center" Width="452" Height="62"
                   FontWeight="Bold"/>
        <TextBlock x:Name="textBlock_Spl1" HorizontalAlignment="Center" 
                   Grid.Row="2" Text="" TextWrapping="Wrap" VerticalAlignment="Center" 
                   Height="62" Width="164" Grid.Column="1"
                   FontWeight="Bold"/>
        <TextBlock x:Name="textBlock_Spl2" HorizontalAlignment="Center" 
                   Grid.Row="3" Text="" TextWrapping="Wrap" VerticalAlignment="Center" 
                   Height="62" Width="164" Grid.Column="1"
                   FontWeight="Bold"/>
    </Grid>
</Window>
